version: "3"

env:
  PATH: "{{.ROOT_DIR}}/.venv/bin:$PATH"
  VIRTUAL_ENV: "{{.ROOT_DIR}}/.venv"
  ANSIBLE_COLLECTIONS_PATH: "{{.ROOT_DIR}}/.venv/galaxy"
  ANSIBLE_ROLES_PATH: "{{.ROOT_DIR}}/.venv/galaxy/ansible_roles"
  ANSIBLE_VARS_ENABLED: "host_group_vars"
  ANSIBLE_LOCALHOST_WARNING: "False"
  ANSIBLE_INVENTORY_UNPARSED_WARNING: "False"

vars:
  PATH_ERROR: is not installed or correctly configured in PATH.
  TAILSCALE_VERSION: 1.60
  ANSIBLE_LINT_FILE: "{{.ANSIBLE_DIR}}/.ansible-lint"
  ANSIBLE_INVENTORY_FILE: "{{.ANSIBLE_DIR}}/inventory/hosts.yaml"
  ANSIBLE_REQUIREMENTS_FILE: "{{.ANSIBLE_DIR}}/requirements.yaml"
  ANSIBLE_PIP_REQUIREMENTS_FILE: "{{.ANSIBLE_DIR}}/requirements.txt"

silent: true

tasks:
  metal:
    desc: Run an Ansible playbook for tailscale installation on metals
    cmds:
      - task: :ansible:deps
      - .venv/bin/ansible-playbook --inventory {{.ANSIBLE_INVENTORY_FILE}} {{.ANSIBLE_DIR}}/playbooks/tailscale-installation.yaml
    preconditions:
      - { msg: "Missing Ansible inventory file", sh: "test -f {{.ANSIBLE_INVENTORY_FILE}}" }

  operater:secret:
    cmds:
      - |
        kubectl apply -f - << EOF
        apiVersion: v1
        kind: Secret
        metadata:
          name: operator-oauth
          namespace: tailscale
          annotations:
            reflector.v1.k8s.emberstack.com/reflection-allowed: "true"
            reflector.v1.k8s.emberstack.com/reflection-auto-enabled: "true"
            reflector.v1.k8s.emberstack.com/reflection-allowed-namespaces: ""
        stringData:
          client_id: $(op read op://Homelab/tailscale_operator-oauth/CLIENT_ID)
          client_secret: $(op read op://Homelab/tailscale_operator-oauth/CLIENT_SECRET)
        EOF
    ignore_error: true

  operator:
    dir: apps/networking/tailscale/operator
    preconditions:
      - sh: "which kustomize"
        msg: "kustomize {{.PATH_ERROR}}"
      - sh: "which kubectl"
        msg: "kubectl {{.PATH_ERROR}}"
    cmds:
      - kubectl create namespace tailscale
      - kustomize build | kubectl apply -f -
      - task: operater:secret
      - echo "Patched secret."
    ignore_error: true
