version: "3"
vars:
  PATH_ERROR: is not installed or correctly configured in PATH.
  TUNNEL_ID:
    sh: |
      op read "op://Homelab/cloudflared_homelab-tunnel/cloudflared-credentials.json" | jq -r .TunnelID

silent: true

tasks:
  dns:secret:
    cmds:
      - |
        kubectl apply -f - << EOF
        apiVersion: v1
        kind: Secret
        metadata:
          name: cloudflare-secret
          namespace: cert-manager
          annotations:
            reflector.v1.k8s.emberstack.com/reflection-allowed: "true"
            reflector.v1.k8s.emberstack.com/reflection-auto-enabled: "true"
            reflector.v1.k8s.emberstack.com/reflection-allowed-namespaces: ""
        stringData:
          API_TOKEN: $(op read "op://Homelab/cloudflare_chalk-ho.me/API_TOKEN")
        EOF
    ignore_error: true

  tunnel:secret:
    cmds:
    - |
        kubectl apply -f - << EOF
        apiVersion: v1
        kind: Secret
        metadata:
          name: cloudflared-secret
          namespace: cloudflared
          annotations:
            reflector.v1.k8s.emberstack.com/reflection-allowed: "true"
            reflector.v1.k8s.emberstack.com/reflection-auto-enabled: "true"
            reflector.v1.k8s.emberstack.com/reflection-allowed-namespaces: "argocd,cloudflared"
        stringData:
          TUNNEL_ID: "{{ .TUNNEL_ID }}"
          credentials.json: "$(op read "op://Homelab/cloudflared_homelab-tunnel/cloudflared-credentials.json" | base64)"
        EOF
    ignore_error: true

  tunnel:endpoint:
    cmds:
      - |
          kubectl apply -f - << EOF
          ---
          apiVersion: externaldns.k8s.io/v1alpha1
          kind: DNSEndpoint
          metadata:
            name: cloudflared
          spec:
            endpoints:
              - dnsName: "external.chalk-ho.me"
                recordType: CNAME
                targets: ["{{ .TUNNEL_ID }}.cfargotunnel.com"]
          EOF


  tunnel:
    dir: apps/networking/cloudflared
    preconditions:
      - sh: "which kustomize"
        msg: "kustomize {{.PATH_ERROR}}"
      - sh: "which kubectl"
        msg: "kubectl {{.PATH_ERROR}}"
    cmds:
      - kubectl create namespace cloudflared
      - kustomize build | kubectl apply -f -
      - task: tunnel:secret
      - task: tunnel:endpoint
      - echo "Patched secret."
    ignore_error: true
