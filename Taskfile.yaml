---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

vars:
  # Directories
  ANSIBLE_DIR: "{{.ROOT_DIR}}/ansible"
  BOOTSTRAP_DIR: "{{.ROOT_DIR}}/bootstrap"
  KUBERNETES_DIR: "{{.ROOT_DIR}}/kubernetes"
  PRIVATE_DIR: "{{.ROOT_DIR}}/.private"
  # Files
  BOOTSTRAP_ADDONS_FILE: "{{.BOOTSTRAP_DIR}}/vars/addons.yaml"
  BOOTSTRAP_CONFIG_FILE: "{{.BOOTSTRAP_DIR}}/vars/config.yaml"
  KUBECONFIG_FILE: "{{.ROOT_DIR}}/kubeconfig"
  MAKEJINJA_CONFIG_FILE: "{{.ROOT_DIR}}/makejinja.toml"
  PIP_REQUIREMENTS_FILE: "{{.ROOT_DIR}}/requirements.txt"
  # SOPS_AGE_FILE: "{{.ROOT_DIR}}/age.key"
  # Binaries
  PYTHON_BIN: python3

includes:
  ansible: .taskfiles/Ansible/Taskfile.yaml
  kubernetes:
    aliases: ["k8s"]
    taskfile: .taskfiles/Kubernetes/Taskfile.yaml
  flux: .taskfiles/Flux/Taskfile.yaml
  k0s: .taskfiles/K0s/Taskfile.yaml
  repository:
    aliases: ["repo"]
    taskfile: .taskfiles/Repository/Taskfile.yaml
  talos: .taskfiles/Talos/Taskfile.yaml
  sops: .taskfiles/Sops/Taskfile.yaml
  workstation: .taskfiles/Workstation/Taskfile.yaml
  argocd: .taskfiles/ArgoCD/Taskfile.yaml
  secrets: .taskfiles/Secrets/Taskfile.yaml
  tailscale:
    aliases:
      - ts
    taskfile: .taskfiles/Tailscale/Taskfile.yaml
  cloudflare:
    aliases:
      - cf
    taskfile: .taskfiles/Cloudflare/Taskfile.yaml
  onepassword:
    aliases:
      - op
    taskfile: .taskfiles/OnePassword/Taskfile.yaml
  grafana:
    taskfile: .taskfiles/Grafana/Taskfile.yaml
  packages:
    taskfile: .taskfiles/Packages/Taskfile.yaml

dotenv:
  - .env

env:
  KUBECONFIG: "{{.KUBECONFIG_FILE}}"
  PYTHONDONTWRITEBYTECODE: "1"
  VIRTUAL_ENV: "{{.ROOT_DIR}}/.venv"

tasks:
  default: task -l

  init:
    desc: Initialize configuration files
    cmds:
      - mkdir -p {{.PRIVATE_DIR}}
      - cp -n {{.BOOTSTRAP_ADDONS_FILE | replace ".yaml" ".sample.yaml"}} {{.BOOTSTRAP_ADDONS_FILE}}
      - cp -n {{.BOOTSTRAP_CONFIG_FILE | replace ".yaml" ".sample.yaml"}} {{.BOOTSTRAP_CONFIG_FILE}}
      - cmd: echo === Configuration files copied ===
        silent: true
      - cmd: echo Proceed with updating the configuration files...
        silent: true
      - cmd: echo {{.BOOTSTRAP_CONFIG_FILE}}
        silent: true
      - cmd: echo {{.BOOTSTRAP_ADDONS_FILE}}
        silent: true
    status:
      - test -f "{{.BOOTSTRAP_ADDONS_FILE}}"
      - test -f "{{.BOOTSTRAP_CONFIG_FILE}}"

  configure:
    desc: Configure repository from bootstrap vars
    prompt: Any conflicting config in the root kubernetes and ansible directories will be overwritten... continue?
    deps: ["workstation:direnv", "workstation:venv", "sops:age-keygen", "init"]
    cmds:
      - task: .template
      - task: sops:encrypt
      - task: .validate

  .template:
    internal: true
    cmd: ./.venv/bin/makejinja
    preconditions:
      - {
          msg: "Missing virtual environment",
          sh: "test -d {{.ROOT_DIR}}/.venv",
        }
      - {
          msg: "Missing Makejinja config file",
          sh: "test -f {{.MAKEJINJA_CONFIG_FILE}}",
        }
      - {
          msg: "Missing Makejinja plugin file",
          sh: "test -f {{.BOOTSTRAP_DIR}}/scripts/plugin.py",
        }
      - {
          msg: "Missing bootstrap addons file",
          sh: "test -f {{.BOOTSTRAP_ADDONS_FILE}}",
        }
      - {
          msg: "Missing bootstrap config file",
          sh: "test -f {{.BOOTSTRAP_CONFIG_FILE}}",
        }

  .validate:
    internal: true
    cmds:
      - task: kubernetes:kubeconform

  cilium:
    dir: apps/networking/cilium
    ignore_error: true
    cmds:
      - kustomize build --enable-helm | kubectl apply -f -
      - sleep 10
      - kustomize build --enable-helm | kubectl apply -f -

  up:
    cmds:
      # - task: tailscale:metal
      # - task ansible:run playbook=cluster-installation -y
      - task: cilium
      - task: tailscale:operator
      - task: cloudflare
      - task: onepassword
      # - task: secrets:external
      - task: argocd


